// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Flatbuf = Flatbuf || {};

/**
 * @constructor
 */
Flatbuf.SimplePlace = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuf.SimplePlace}
 */
Flatbuf.SimplePlace.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuf.SimplePlace=} obj
 * @returns {Flatbuf.SimplePlace}
 */
Flatbuf.SimplePlace.getRootAsSimplePlace = function(bb, obj) {
  return (obj || new Flatbuf.SimplePlace).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuf.SimplePlace=} obj
 * @returns {Flatbuf.SimplePlace}
 */
Flatbuf.SimplePlace.getSizePrefixedRootAsSimplePlace = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Flatbuf.SimplePlace).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Flatbuf.SimplePlace.prototype.lat = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
Flatbuf.SimplePlace.prototype.lon = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
Flatbuf.SimplePlace.prototype.capacity = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Flatbuf.SimplePlace.prototype.countyIndex = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
Flatbuf.SimplePlace.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuf.SimplePlace.startSimplePlace = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} lat
 */
Flatbuf.SimplePlace.addLat = function(builder, lat) {
  builder.addFieldFloat32(0, lat, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} lon
 */
Flatbuf.SimplePlace.addLon = function(builder, lon) {
  builder.addFieldFloat32(1, lon, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} capacity
 */
Flatbuf.SimplePlace.addCapacity = function(builder, capacity) {
  builder.addFieldInt16(2, capacity, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} countyIndex
 */
Flatbuf.SimplePlace.addCountyIndex = function(builder, countyIndex) {
  builder.addFieldInt16(3, countyIndex, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
Flatbuf.SimplePlace.addName = function(builder, nameOffset) {
  builder.addFieldOffset(4, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuf.SimplePlace.endSimplePlace = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} lat
 * @param {number} lon
 * @param {number} capacity
 * @param {number} countyIndex
 * @param {flatbuffers.Offset} nameOffset
 * @returns {flatbuffers.Offset}
 */
Flatbuf.SimplePlace.createSimplePlace = function(builder, lat, lon, capacity, countyIndex, nameOffset) {
  Flatbuf.SimplePlace.startSimplePlace(builder);
  Flatbuf.SimplePlace.addLat(builder, lat);
  Flatbuf.SimplePlace.addLon(builder, lon);
  Flatbuf.SimplePlace.addCapacity(builder, capacity);
  Flatbuf.SimplePlace.addCountyIndex(builder, countyIndex);
  Flatbuf.SimplePlace.addName(builder, nameOffset);
  return Flatbuf.SimplePlace.endSimplePlace(builder);
}

/**
 * @constructor
 */
Flatbuf.PlaceArray = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Flatbuf.PlaceArray}
 */
Flatbuf.PlaceArray.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuf.PlaceArray=} obj
 * @returns {Flatbuf.PlaceArray}
 */
Flatbuf.PlaceArray.getRootAsPlaceArray = function(bb, obj) {
  return (obj || new Flatbuf.PlaceArray).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Flatbuf.PlaceArray=} obj
 * @returns {Flatbuf.PlaceArray}
 */
Flatbuf.PlaceArray.getSizePrefixedRootAsPlaceArray = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Flatbuf.PlaceArray).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {Flatbuf.SimplePlace=} obj
 * @returns {Flatbuf.SimplePlace}
 */
Flatbuf.PlaceArray.prototype.place = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Flatbuf.SimplePlace).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Flatbuf.PlaceArray.prototype.placeLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
Flatbuf.PlaceArray.prototype.totalHomeCapacity = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Flatbuf.PlaceArray.startPlaceArray = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} placeOffset
 */
Flatbuf.PlaceArray.addPlace = function(builder, placeOffset) {
  builder.addFieldOffset(0, placeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Flatbuf.PlaceArray.createPlaceVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Flatbuf.PlaceArray.startPlaceVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} totalHomeCapacity
 */
Flatbuf.PlaceArray.addTotalHomeCapacity = function(builder, totalHomeCapacity) {
  builder.addFieldInt32(1, totalHomeCapacity, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Flatbuf.PlaceArray.endPlaceArray = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Flatbuf.PlaceArray.finishPlaceArrayBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Flatbuf.PlaceArray.finishSizePrefixedPlaceArrayBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} placeOffset
 * @param {number} totalHomeCapacity
 * @returns {flatbuffers.Offset}
 */
Flatbuf.PlaceArray.createPlaceArray = function(builder, placeOffset, totalHomeCapacity) {
  Flatbuf.PlaceArray.startPlaceArray(builder);
  Flatbuf.PlaceArray.addPlace(builder, placeOffset);
  Flatbuf.PlaceArray.addTotalHomeCapacity(builder, totalHomeCapacity);
  return Flatbuf.PlaceArray.endPlaceArray(builder);
}

// Exports for Node.js and RequireJS
this.Flatbuf = Flatbuf;
